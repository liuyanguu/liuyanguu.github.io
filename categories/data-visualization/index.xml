<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Visualization on Welcome to my blog</title>
    <link>https://liuyanguu.github.io/categories/data-visualization/</link>
    <description>Recent content in Data Visualization on Welcome to my blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://liuyanguu.github.io/categories/data-visualization/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SHAP visualization for XGBoost in R</title>
      <link>https://liuyanguu.github.io/post/2019/07/18/visualization-of-shap-for-xgboost/</link>
      <pubDate>Thu, 18 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://liuyanguu.github.io/post/2019/07/18/visualization-of-shap-for-xgboost/</guid>
      <description>SHAP values: local explanation to global understandingLocal ExplanationSHAP plotsSHAP force plot (stack plot)Summary plotDependence plotInteraction valuesSHAP values: local explanation to global understandingTree-based machine learning models (random forest, gradient boosted trees, XGBoost) are the most popular non-linear models today. SHAP (SHapley Additive exPlnation) values is claimed to be the most advanced method to interpret results from tree-based models.</description>
    </item>
    
    <item>
      <title>ggplot heatmap US 50-state map and China province map</title>
      <link>https://liuyanguu.github.io/post/2019/04/17/ggplot-heatmap-us-50-states-map-and-china-province-map/</link>
      <pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://liuyanguu.github.io/post/2019/04/17/ggplot-heatmap-us-50-states-map-and-china-province-map/</guid>
      <description>1.1. US Map (50 states) using usmap 1.2. Using map_data and build from scratch 2.1. China map by province using downloaded shapfiles 2.2. Using geojsonMap (leaflet) It sounds easy and straight-forward but turned out not as simple as I expected. I will show 50-state (including Alaska and Hawaii) United States thematic map, with map scale, with state abbreviations China thematic map, with map scale, with names of provinces in either</description>
    </item>
    
    <item>
      <title>Shiny in Blogdown</title>
      <link>https://liuyanguu.github.io/post/2019/02/24/shiny-in-blogdown/</link>
      <pubDate>Sun, 24 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://liuyanguu.github.io/post/2019/02/24/shiny-in-blogdown/</guid>
      <description>How to embed ShinyMy Shiny app exampleHow to embed ShinySince Blogdown is for static websites, it cannot run Shiny in rmarkdown directly. According to discussion here and document here.
The only way to do it is using iframe and write outside the chunk:
&amp;lt;iframe src=&#34;https://liuyanguu.shinyapps.io/bcl_app/&#34; width=1000 height=800&#34;&amp;gt;&amp;lt;/iframe&amp;gt;
There is also a built-in function in knitr to do the same thing and write in the chunk.</description>
    </item>
    
    <item>
      <title>SHAP Visualization in R (First post)</title>
      <link>https://liuyanguu.github.io/post/2018/10/14/shap-visualization-for-xgboost/</link>
      <pubDate>Sun, 14 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://liuyanguu.github.io/post/2018/10/14/shap-visualization-for-xgboost/</guid>
      <description>BackgroundSummary plotFunction to get SHAP value matrixFunctions for summary plotSHAP plot for each featureSHAP stack plot for observationFunction for stack plotStack plot by clustering groupsAn updated version has been posted in a later post
BackgroundI will illustrate the application of SHAP (SHapley Additive exPlnation) values to visualize the efforts of features on the outcome variable in a XGBoost model.</description>
    </item>
    
    <item>
      <title>Spatial data in R: Dividing raster layers into equal-area rings</title>
      <link>https://liuyanguu.github.io/post/2018/07/20/spatial-data-in-r-dividing-raster-layers-into-equal-area-rings/</link>
      <pubDate>Fri, 20 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://liuyanguu.github.io/post/2018/07/20/spatial-data-in-r-dividing-raster-layers-into-equal-area-rings/</guid>
      <description>Saturation in ten cities with equal-area ringsR Code for one cityResults for the ring saturationsAverage saturation in each ringMethodologyOriginal CodeThis data visualization example include:
* Import .img file as a raster
* Turn raster into a data.frame of points (coordinates) and values
* Dividing the points into 100 equal-area rings
* Calculate Built-up Area/Urban Extent for each ring
* Turn dataframe into raster</description>
    </item>
    
    <item>
      <title>How to Draw Heatmap with Colorful Dendrogram</title>
      <link>https://liuyanguu.github.io/post/2018/07/16/how-to-draw-heatmap-with-colorful-dendrogram/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://liuyanguu.github.io/post/2018/07/16/how-to-draw-heatmap-with-colorful-dendrogram/</guid>
      <description>DataVersion 1: Color both the branches and labelsVersion 2: color only the labels.Version 3: If there is no color, and we do not reorder the branchesThis data visualization example include:
* Hierarchical clustering, dendrogram and heat map based on normalized odds ratios
* The dendrogram was built separately to give color to dendrogramâ€™s branches/labels based on cluster using dendextend
* Heatmap is made by heatmap.</description>
    </item>
    
  </channel>
</rss>