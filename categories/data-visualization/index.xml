<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Visualization on Welcome to my blog</title>
    <link>/categories/data-visualization/</link>
    <description>Recent content in Data Visualization on Welcome to my blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Oct 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/data-visualization/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SHAP Visualization for XGBoost</title>
      <link>/post/2018/10/14/shap-visualization-for-xgboost/</link>
      <pubDate>Sun, 14 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/10/14/shap-visualization-for-xgboost/</guid>
      <description>BackgroundSummary plotSHAP plot for each feature(Under further revise)
BackgroundI will illustrate here the application of SHAP (SHapley Additive exPlnation) values to visualize the efforts of features on the outcome variable in a XGBoost model.
The function was developed by Scott Lundberg in Python Github Link and then combined into xgboost with one visualization function xgb.plot.shap. But we can make better summary figures as those functions in its Python package in more flexible ways by extracting the SHAP values and plot by ourselves.</description>
    </item>
    
    <item>
      <title>Spatial data in R: Dividing raster layers into equal-area rings</title>
      <link>/post/2018/07/20/spatial-data-in-r-dividing-raster-layers-into-equal-area-rings/</link>
      <pubDate>Fri, 20 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/07/20/spatial-data-in-r-dividing-raster-layers-into-equal-area-rings/</guid>
      <description>Saturation in ten cities with equal-area ringsR Code for one cityResults for the ring saturationsAverage saturation in each ringMethodologyOriginal CodeThis data visualization example include:
* Import .img file as a raster
* Turn raster into a data.frame of points (coordinates) and values
* Dividing the points into 100 equal-area rings
* Calculate Built-up Area/Urban Extent for each ring
* Turn dataframe into raster</description>
    </item>
    
    <item>
      <title>How to Draw Heatmap with Colorful Dendrogram</title>
      <link>/post/2018/07/16/how-to-draw-heatmap-with-colorful-dendrogram/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/07/16/how-to-draw-heatmap-with-colorful-dendrogram/</guid>
      <description>DataVersion 1: Color both the branches and labelsVersion 2: color only the labels.Version 3: If there is no color, and we do not reorder the branchesThis data visualization example include:
* Hierarchical clustering, dendrogram and heat map based on normalized odds ratios
* The dendrogram was built separately to give color to dendrogramâ€™s branches/labels based on cluster using dendextend
* Heatmap is made by heatmap.</description>
    </item>
    
  </channel>
</rss>