<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Welcome to my blog</title>
    <link>https://liuyanguu.github.io/</link>
    <description>Recent content on Welcome to my blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://liuyanguu.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SHAP visualization for XGBoost in R</title>
      <link>https://liuyanguu.github.io/post/2019/07/18/visualization-of-shap-for-xgboost/</link>
      <pubDate>Thu, 18 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://liuyanguu.github.io/post/2019/07/18/visualization-of-shap-for-xgboost/</guid>
      <description>SHAP package in RWhy SHAP valuesLocal ExplanationConsistency in Global Feature ImportanceSHAP plotsSHAP force plotSummary plotDependence plotInteraction valuesSHAP package in RThe R plotting functions used in this blog were combined into R package **SHAPforxgboost&#34;.To install, please download from the github.Still under further revise.
devtools::install_github(&amp;quot;liuyanguu/SHAPforxgboost&amp;quot;)Why SHAP valuesSHAP’s main advantages are local explanation and consistency in global model structure.</description>
    </item>
    
    <item>
      <title>ggplot heatmap US 50-state map and China province map</title>
      <link>https://liuyanguu.github.io/post/2019/04/17/ggplot-heatmap-us-50-states-map-and-china-province-map/</link>
      <pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://liuyanguu.github.io/post/2019/04/17/ggplot-heatmap-us-50-states-map-and-china-province-map/</guid>
      <description>1.1. US Map (50 states) using usmap 1.2. Using map_data and build from scratch 2.1. China map by province using downloaded shapfiles 2.2. Using geojsonMap (leaflet) It sounds easy and straight-forward but turned out not as simple as I expected. I will show 50-state (including Alaska and Hawaii) United States thematic map, with map scale, with state abbreviations China thematic map, with map scale, with names of provinces in either</description>
    </item>
    
    <item>
      <title>Shiny in Blogdown</title>
      <link>https://liuyanguu.github.io/post/2019/02/24/shiny-in-blogdown/</link>
      <pubDate>Sun, 24 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://liuyanguu.github.io/post/2019/02/24/shiny-in-blogdown/</guid>
      <description>How to embed ShinyMy Shiny app exampleHow to embed ShinySince Blogdown is for static websites, it cannot run Shiny in rmarkdown directly. According to discussion here and document here.
The only way to do it is using iframe and write outside the chunk:
&amp;lt;iframe src=&#34;https://liuyanguu.shinyapps.io/bcl_app/&#34; width=1000 height=800&#34;&amp;gt;&amp;lt;/iframe&amp;gt;
There is also a built-in function in knitr to do the same thing and write in the chunk.</description>
    </item>
    
    <item>
      <title>Study shrinkage and DART in xgboost modeling using a simple dataset</title>
      <link>https://liuyanguu.github.io/post/2018/11/15/xgboost-dart-example/</link>
      <pubDate>Thu, 15 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://liuyanguu.github.io/post/2018/11/15/xgboost-dart-example/</guid>
      <description>DataShrinkageDART: Dropout - MARTskip_droprate_dropone_dropIt is always a good idea to study the packaged algorithm with a simple example. Inspired by my colleague Kodi’s excellent work showing how xgboost handles missing values, I tried a simple 5x2 dataset to show how shrinkage and DART influence the growth of trees in the model.
Dataset.seed(123)n0 &amp;lt;- 5X &amp;lt;- data.</description>
    </item>
    
    <item>
      <title>SHAP Visualization in R (first post)</title>
      <link>https://liuyanguu.github.io/post/2018/10/14/shap-visualization-for-xgboost/</link>
      <pubDate>Sun, 14 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://liuyanguu.github.io/post/2018/10/14/shap-visualization-for-xgboost/</guid>
      <description>BackgroundExample 1SHAP summary plotSHAP dependence plotSHAP force plotExample 2Summary plotDependence plot for each featureForce plotStack plot by clustering groups19/07/21:An updated version of these functions has been posted in a later post. I used a package to wrap them up. Please refer to: SHAP visualization for XGBoost in R
BackgroundI will illustrate the application of SHAP (SHapley Additive exPlnation) values to visualize the efforts of features on the outcome variable in a XGBoost model.</description>
    </item>
    
    <item>
      <title>autoxgboost: Automatic XGBoost using Bayesian Optimization</title>
      <link>https://liuyanguu.github.io/post/2018/10/03/autoxgboost-bayesian-optimization/</link>
      <pubDate>Wed, 03 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://liuyanguu.github.io/post/2018/10/03/autoxgboost-bayesian-optimization/</guid>
      <description>BackgroundUsing autoxgboostNew ResultCompared to old ResultTuning over Different BoostersReturn the recommended/chosen parameters(updated on Oct 14)
BackgroundIt has been a while since my last update. I have been working on lots of interesting projects since I joined Mount Sinai in August. We have a great team here and obviously I can learn a lot from everyone around me. Most of my job so far focuses on applying machine learning techniques, mainly extreme gradient boosting and the visualization of results.</description>
    </item>
    
    <item>
      <title>Spatial data in R: Dividing raster layers into equal-area rings</title>
      <link>https://liuyanguu.github.io/post/2018/07/20/spatial-data-in-r-dividing-raster-layers-into-equal-area-rings/</link>
      <pubDate>Fri, 20 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://liuyanguu.github.io/post/2018/07/20/spatial-data-in-r-dividing-raster-layers-into-equal-area-rings/</guid>
      <description>Saturation in ten cities with equal-area ringsR Code for one cityResults for the ring saturationsAverage saturation in each ringMethodologyOriginal CodeThis data visualization example include:
* Import .img file as a raster
* Turn raster into a data.frame of points (coordinates) and values
* Dividing the points into 100 equal-area rings
* Calculate Built-up Area/Urban Extent for each ring
* Turn dataframe into raster</description>
    </item>
    
    <item>
      <title>How to Draw Heatmap with Colorful Dendrogram</title>
      <link>https://liuyanguu.github.io/post/2018/07/16/how-to-draw-heatmap-with-colorful-dendrogram/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://liuyanguu.github.io/post/2018/07/16/how-to-draw-heatmap-with-colorful-dendrogram/</guid>
      <description>DataVersion 1: Color both the branches and labelsVersion 2: color only the labels.Version 3: If there is no color, and we do not reorder the branchesThis data visualization example include:
* Hierarchical clustering, dendrogram and heat map based on normalized odds ratios
* The dendrogram was built separately to give color to dendrogram’s branches/labels based on cluster using dendextend
* Heatmap is made by heatmap.</description>
    </item>
    
    <item>
      <title>eXtreme Gradient Boosting (XGBoost): Better than random forest or gradient boosting</title>
      <link>https://liuyanguu.github.io/post/2018/07/09/extreme-gradient-boosting-xgboost-better-than-random-forest-or-gradient-boosting/</link>
      <pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://liuyanguu.github.io/post/2018/07/09/extreme-gradient-boosting-xgboost-better-than-random-forest-or-gradient-boosting/</guid>
      <description>OverviewAbout the Data1. Extreme Gradient Boosting2. Gradient boosting3. Random Forest4. Lasso5. Best SubsetCompare MSEsOriginal CodeOverviewI recently had the great pleasure to meet with Professor Allan Just and he introduced me to eXtreme Gradient Boosting (XGBoost). I have extended the earlier work on my old blog by comparing the results across XGBoost, Gradient Boosting (GBM), Random Forest, Lasso, and Best Subset.</description>
    </item>
    
    <item>
      <title>Catalog of my old blog</title>
      <link>https://liuyanguu.github.io/post/2018/07/01/catalogue-of-my-old-blog/</link>
      <pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://liuyanguu.github.io/post/2018/07/01/catalogue-of-my-old-blog/</guid>
      <description>Introducing my new blog written solely in R MarkdownWhen I realized it was so convenient to write blog directly using R Markdown, I searched if there is a specific tool for it. And I found Blogdown, an R package developed by Yihui Xie, who is also the author of R Markdown.
CatalogAs a summary, I would like to create a catalog for the main topics I wrote on google blogger before July 2018.</description>
    </item>
    
    <item>
      <title>About Blogdown and Hugo XMag Theme</title>
      <link>https://liuyanguu.github.io/about-hugo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://liuyanguu.github.io/about-hugo/</guid>
      <description>Yang: This is an original page enclosed by Yihui Xie in the Hugo XMag theme he wrote. I really like it and use it for this blog. This post gives a great introduction to how this blog works.
XMag is the second Hugo theme I have designed. It is based on my first Hugo theme XMin, and similarly, features minimalism but with a magazine style on the homepage inspired by The Signpost on Wikipedia.</description>
    </item>
    
    <item>
      <title>Yang Liu</title>
      <link>https://liuyanguu.github.io/about-me/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://liuyanguu.github.io/about-me/</guid>
      <description>I am a statistician working in the fields of healthcare, epidemiology, environmental science and urban science. I work in New York since 2014.
I started my old blog in 2018 to keep a simple record of my work and share some of my experience in R programming. Later I upgraded to this one.
This blog was created using R package blogdown written by Yihui Xie. Lots of thanks to him. All the posts were written exclusively using RMarkdown.</description>
    </item>
    
  </channel>
</rss>